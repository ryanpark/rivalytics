/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TennisRouteImport } from './routes/tennis'
import { Route as FootballRouteImport } from './routes/football'
import { Route as CricketRouteImport } from './routes/cricket'
import { Route as BasketballRouteImport } from './routes/basketball'
import { Route as IndexRouteImport } from './routes/index'

const TennisRoute = TennisRouteImport.update({
  id: '/tennis',
  path: '/tennis',
  getParentRoute: () => rootRouteImport,
} as any)
const FootballRoute = FootballRouteImport.update({
  id: '/football',
  path: '/football',
  getParentRoute: () => rootRouteImport,
} as any)
const CricketRoute = CricketRouteImport.update({
  id: '/cricket',
  path: '/cricket',
  getParentRoute: () => rootRouteImport,
} as any)
const BasketballRoute = BasketballRouteImport.update({
  id: '/basketball',
  path: '/basketball',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/basketball': typeof BasketballRoute
  '/cricket': typeof CricketRoute
  '/football': typeof FootballRoute
  '/tennis': typeof TennisRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/basketball': typeof BasketballRoute
  '/cricket': typeof CricketRoute
  '/football': typeof FootballRoute
  '/tennis': typeof TennisRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/basketball': typeof BasketballRoute
  '/cricket': typeof CricketRoute
  '/football': typeof FootballRoute
  '/tennis': typeof TennisRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/basketball' | '/cricket' | '/football' | '/tennis'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/basketball' | '/cricket' | '/football' | '/tennis'
  id: '__root__' | '/' | '/basketball' | '/cricket' | '/football' | '/tennis'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BasketballRoute: typeof BasketballRoute
  CricketRoute: typeof CricketRoute
  FootballRoute: typeof FootballRoute
  TennisRoute: typeof TennisRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/tennis': {
      id: '/tennis'
      path: '/tennis'
      fullPath: '/tennis'
      preLoaderRoute: typeof TennisRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/football': {
      id: '/football'
      path: '/football'
      fullPath: '/football'
      preLoaderRoute: typeof FootballRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cricket': {
      id: '/cricket'
      path: '/cricket'
      fullPath: '/cricket'
      preLoaderRoute: typeof CricketRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/basketball': {
      id: '/basketball'
      path: '/basketball'
      fullPath: '/basketball'
      preLoaderRoute: typeof BasketballRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BasketballRoute: BasketballRoute,
  CricketRoute: CricketRoute,
  FootballRoute: FootballRoute,
  TennisRoute: TennisRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
